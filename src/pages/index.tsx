import Head from "next/head";
import Image from "next/image";
import { Nav, Navbar, Container } from "react-bootstrap";
import 'bootstrap/dist/css/bootstrap.min.css';
import styles from "@/styles/Home.module.css";
import React, { useState } from "react";

import SpeedyPaws from "@/pages/speedypaws";
import Homepage from "@/pages/homepage";
import KittyKaboom from "@/pages/kittykaboom";
import FlyKitty from "@/pages/flykitty";


// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
	apiKey: "AIzaSyDx0s34dTsZTZXXE26qWSxIyIGCVqrAQHs",
	authDomain: "strayhub-65a3f.firebaseapp.com",
	projectId: "strayhub-65a3f",
	storageBucket: "strayhub-65a3f.appspot.com",
	messagingSenderId: "322139941913",
	appId: "1:322139941913:web:bd2ebc51ebe8b905220e88",
	measurementId: "G-YNYHYPW2XJ"
};




export default function Home() {
	const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] =
		useState(false);
	const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);

	const closeAll = () => {
		setIsNetworkSwitchHighlighted(false);
		setIsConnectHighlighted(false);
	};

	// Initialize Firebase
	const app = initializeApp(firebaseConfig);
	const analytics = getAnalytics(app);

	const showSidebar = window.innerWidth >= 768;

	const [activeLink, setActiveLink] = useState("Homepage");

	const handleLinkClick = (link:string) => {
		setActiveLink(link);
	};

	const renderPage = () => {
		switch (activeLink) {
			case "Homepage":
				return <Homepage/>;
			case "Speedy Paws":
				return <SpeedyPaws />;
			case "Kitty Kaboom":
				return <KittyKaboom />;
			case "Fly Kitty!":
				return <FlyKitty />;
			default:
				return <Homepage/>;
		}
	};

	return (
		<>
			<Head>
				<title>WalletConnect | Next Starter Template</title>
				<meta
					name="description"
					content="Generated by create-wc-dapp"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<header>
				<div
					className={styles.backdrop}
					style={{
						opacity:
							isConnectHighlighted || isNetworkSwitchHighlighted
								? 1
								: 0,
					}}
				/>
				<div className={styles.header}>
					<div></div>
					<div className={styles.buttons}>
						<div
							onClick={closeAll}
							className={`${styles.highlight} ${
								isNetworkSwitchHighlighted
									? styles.highlightSelected
									: ``
							}`}
						>
							<w3m-network-button />
						</div>
						<div
							onClick={closeAll}
							className={`${styles.highlight} ${
								isConnectHighlighted
									? styles.highlightSelected
									: ``
							}`}
						>
							<w3m-button />
						</div>
					</div>
				</div>
			</header>
			<div className={styles.main}>
				{/* Navbar for screens where columns stack vertically */}
				<Navbar bg="light" expand="lg" className={!showSidebar ? 'd-lg-none' : 'd-none'}>
					<Navbar.Brand href="#home">Navbar</Navbar.Brand>
					<Navbar.Toggle aria-controls="basic-navbar-nav" />
					<Navbar.Collapse id="basic-navbar-nav">
						<Nav className="mr-auto">
							<Nav.Link href="#home">Home</Nav.Link>
							<Nav.Link href="#link">Link</Nav.Link>
						</Nav>
					</Navbar.Collapse>
				</Navbar>

				{/* Columns for screens where columns are displayed side by side */}
				<Container className={"homepage"} fluid>
					<div className="row">
						<div className="col-md-2">
							{/* Sidebar navigation */}

							<Image src="/logosct.png" width={186} height={170} alt={"logo"} onClick={()=> handleLinkClick("Homepage")} priority={true} ></Image>
							<Nav defaultActiveKey="/home" className="flex-column">
								<Nav.Link href="#" onClick={() => handleLinkClick("Homepage")} active={activeLink === "Homepage"}>Home</Nav.Link>
								<Nav.Link href="#" onClick={() => handleLinkClick("Speedy Paws")} active={activeLink === "Speedy Paws"}>Speedy Paws</Nav.Link>
								<Nav.Link href="#" onClick={() => handleLinkClick("Kitty Kaboom")} active={activeLink === "Kitty Kaboom"}>Kitty Kaboom</Nav.Link>
								<Nav.Link href="#" onClick={() => handleLinkClick("Fly Kitty!")} active={activeLink === "Fly Kitty!"}>Fly Kitty!</Nav.Link>
							</Nav>
						</div>
						<div id="main-content" className={'col '}>
							{/* Render the selected page */}
							{renderPage()}
						</div>
					</div>
				</Container>
			</div>
		</>
	);
}

